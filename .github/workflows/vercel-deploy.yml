name: Vercel Deployment with Approval

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Link Vercel Project
        run: vercel link --yes --token ${{ secrets.VERCEL_TOKEN }}

      - name: Create Preview Deployment
        id: preview-deploy
        run: |
          DEPLOY_OUTPUT=$(vercel --token ${{ secrets.VERCEL_TOKEN }})
          echo "$DEPLOY_OUTPUT"
          
          PREVIEW_URL=$(grep -o 'https://[^ ]*\.vercel\.app' <<< "$DEPLOY_OUTPUT")
          echo "preview_url=$PREVIEW_URL" >> $GITHUB_OUTPUT

      - name: Send Approval Notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "üîÑ Vercel Deployment Approval Required - ${{ github.repository }}"
          body: |
            A production deployment is awaiting approval.

            üì¶ Repository: ${{ github.repository }}
            üîÄ Branch: ${{ github.ref_name }}
            üî¢ Commit: ${{ github.sha }}
            üë§ Triggered by: ${{ github.actor }}
            üåê Preview URL: ${{ steps.preview-deploy.outputs.preview_url }}

            ‚úÖ Approve the deployment via GitHub Actions:
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

            üîç Commit details:
            ${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}
          to: ${{ secrets.APPROVER_EMAILS }}
          from: "GitHub Actions <${{ secrets.SMTP_USERNAME }}>"

  deploy:
     needs: prepare
     runs-on: ubuntu-latest
     steps:
       - name: Trigger Vercel Deployment
         id: deploy
         run: |
          
           
           DEPLOY_RESPONSE=$(curl -s -X POST "***")
           if [ $? -eq 0 ]; then
             echo "‚úÖ Deployment triggered successfully"
           else
             echo "‚ùå Failed to trigger deployment"
           fi
        
